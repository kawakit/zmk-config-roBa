#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R                   &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S      &kp D         &kp F                   &kp G        &kp LS(LG(S))      &kp TILDE             &kp H        &kp J  &kp K      &kp L    &lt 2 SEMICOLON
&mt LEFT_SHIFT Z  &kp X      &kp C         &kp V                   &kp B        &kp ESCAPE         &kp DOUBLE_QUOTES     &kp N        &kp M  &kp COMMA  &kp DOT  &lt 5 SLASH
&kp LSHFT         &kp LCTRL  &kp LEFT_ALT  &lt_to_layer_0 2 SPACE  &lt 1 SPACE  &lt 3 F3           &mt RSHIFT BACKSPACE  &lt 1 ENTER                             &kp RIGHT_WIN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp N7        &kp NUMBER_8             &kp NUMBER_9  &kp PLUS                          &kp CARET  &kp LEFT_BRACKET      &kp DOLLAR     &kp RIGHT_BRACKET      &kp GRAVE
&kp AT_SIGN      &kp NUMBER_4  &kp NUMBER_5             &kp NUMBER_6  &kp MINUS     &trans      &trans  &kp HASH   &kp LEFT_PARENTHESIS  &kp EQUAL      &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE
&kp N0           &kp NUMBER_1  &kp NUMBER_2             &kp NUMBER_3  &kp ASTERISK  &trans      &trans  &trans     &kp PERCENT           &kp AMPERSAND  &kp PERIOD             &kp BACKSLASH
&kp LEFT_SHIFT   &kp N0        &mt LEFT_SHIFT LEFT_WIN  &kp N0        &kp N0        &trans      &trans  &trans                                                                 &mt RIGHT_SHIFT RIGHT_ALT
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp F7  &kp F8  &kp F9   &kp PLUS                                                   &kp CARET         &kp K_VOLUME_UP    &kp C_MUTE      &kp K_VOLUME_DOWN  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp F4  &kp F5  &kp F6   &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &mkp MB1           &kp HASH        &mkp MB2           &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp F1  &kp F2  &kp F3   &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp BACKSLASH
&trans                      &trans  &trans  &kp TAB  &trans        &trans                       &kp DELETE      &trans                                                                  &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans          &kp DOWN_ARROW  &trans           &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
